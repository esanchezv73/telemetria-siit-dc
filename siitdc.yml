name: ids-siitdc
mgmt:
  network: custom_mgmt              # management network name
  ipv4-subnet: 172.80.80.0/24       # ipv4 range
  
topology:
  nodes:
    ciscort:
      kind: cisco_iol
      image: docker.io/arthurk99/cisco-iol:17.15.01 
      startup-config: core/config.partial
    
    # switch Nokia SRL DC
    switch-dc:
      kind: nokia_srlinux
      image: ghcr.io/nokia/srlinux:24.10.1
      type: ixrd3
      startup-config: srlsw/switch-dc.cfg

    # switch Nokia SRL LAN ipv4
    switch-lan:
      kind: nokia_srlinux
      image: ghcr.io/nokia/srlinux:24.10.1
      type: ixrd3
      startup-config: srlsw/switch-lan.cfg
      
         
    # TELEMETRIA STACK
    prometheus:
      kind: linux
      mgmt-ipv4: 172.80.80.42
      image: quay.io/prometheus/prometheus:v2.54.1
      binds:
        - prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      cmd: --config.file=/etc/prometheus/prometheus.yml
      ports:
        - 9090:9090

    grafana:
      kind: linux
      mgmt-ipv4: 172.80.80.43
      image: grafana/grafana:latest
      binds:
        - grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
        - grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
        - config/grafana/dashboards:/var/lib/grafana/dashboards
      ports:
        - 3000:3000
      env:        
        # env vars to enable anonymous access
        GF_ORG_ROLE: "Admin"
        GF_ORG_NAME: "Main Org"
        GF_AUTH_ANONYMOUS_ENABLED: "true"
        GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
        GF_AUTH_ANONYMOUS: "true"
        GF_AUTH_OAUTH_AUTO_LOGIN: "true"
    
    gNMIc:
      kind: linux
      image: docker.io/esanchezv/hellt-gnmic:latest
      binds:
        - configs/python_scapy.sh:/root/python_scapy.sh
        - gnmic/gnmic-config.yml:/gnmic-config.yml:ro
        - gnmic/gnmic-stats-ifaces.yml:/gnmic-stats-ifaces.yml:ro
      exec: 
        - mkdir /data
        - chmod +x /data
        - chmod +x /root/python_scapy.sh
        - bash /root/python_scapy.sh   
    
    # Servidor IPv6
    webserver:
      kind: linux
      image: esanchezv/srvhttps:latest
      binds:
       - configs/serverweb.sh:/root/serverweb.sh
       - configs/web-server.html:/var/www/localhost/htdocs/index.html
       
      exec:
      #- chmod +x /root/serverweb.sh
      #- bash /root/serverweb.sh
      #- nginx
      - ip -6 route del default dev eth0
      - ip -6 addr add 2001:db8:dc::50/64 dev eth1
      # ruta a la red ipv6 only
      - ip -6 route add 2001:db8::/64 via 2001:db8:dc::1
      # ruta a la red para traducci√≥n IPv4 IPv6 
      - ip -6 route add 64:ff9b::/96 via 2001:db8:dc::2

      
    SRVSIIT:
      kind: linux
      image: docker.io/esanchezv/siit-dcv2:latest
      binds:
       - configs/siitdc.sh:/root/siitdc.sh
      exec:
       - chmod +x /root/siitdc.sh
       - bash /root/siitdc.sh
       - modprobe jool_siit
       - jool_siit instance add "lacnic" --netfilter --pool6 64:ff9b::/96
       - jool_siit -i "lacnic" eamt add 192.168.0.80/32 2001:db8:dc::50/128
       - ip -6 route del default dev eth0       
       - ip -6 addr add 2001:db8:dc::2/64 dev eth1       
       - ip addr add 10.0.0.2/24 dev eth2
       - "sysctl -w net.ipv4.ip_forward=1"
       - "sysctl -w net.ipv6.conf.all.forwarding=1"
       
      
    
    # PC IPv4 only
    PC2:
      kind: linux
      image: docker.io/esanchezv/kaliipv6v2.2:latest
      exec:
       - apt -y install t50    
      
    PC3:
      kind: linux
      image: docker.io/esanchezv/kaliipv6v2.2:latest
      exec:
       - apt -y install t50   
     
      
  links:
    - endpoints: ["webserver:eth1", "switch-dc:e1-1"]
    - endpoints: ["SRVSIIT:eth1", "switch-dc:e1-3"]
    - endpoints: ["SRVSIIT:eth2", "switch-lan:e1-1"]
    - endpoints: ["ciscort:Ethernet0/1", "switch-lan:e1-2"]
    - endpoints: ["gNMIc:eth1", "switch-lan:e1-3"]
    - endpoints: ["PC2:eth1", "switch-lan:e1-4"]
    - endpoints: ["PC3:eth1", "switch-lan:e1-5"]
    
 
    
     
